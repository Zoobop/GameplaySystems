//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.1
//     from Assets/Core/Scripts/Runtime/Input/InputActions/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""ecd1ed74-3df6-4d32-9a3a-e41270e62596"",
            ""actions"": [
                {
                    ""name"": ""Look3rdPerson"",
                    ""type"": ""Value"",
                    ""id"": ""89fda3ad-4d60-4e30-acf5-8b030f04c27a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look1stPerson"",
                    ""type"": ""Value"",
                    ""id"": ""ede08323-fef8-4acf-b596-9a026fadae00"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9614c5b4-c5c9-4db2-8a25-ae82479531ea"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""db9d6b8e-a8ca-44f9-9a82-03b8726ccc5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""78229945-da55-43f2-92c2-9dfcd0772ba7"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6842c43b-faec-48e2-8c0c-f027ca90d919"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""73111b1b-8965-492e-ab99-e858794015f9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9bc0d82b-b1e6-437b-926b-71e55521c1e8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""113de081-c0bd-45b9-a4a6-0075ae01d12e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bc917ba5-1388-46b9-8d08-3f840f34050a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""f5e87560-b1d7-4dca-aaa6-e4cf17ad42e9"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look3rdPerson"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f9942dd6-7b26-4ade-9ab3-935b21e26492"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look3rdPerson"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""a3f8d0e4-0f52-4b5d-ab53-a3a5291591c3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look3rdPerson"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e55d3ed4-4a89-40b7-b834-c17bac6588d4"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look3rdPerson"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a9672ea-bfa0-49e2-8aeb-7dbafe3daaf3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look1stPerson"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc5d80b4-541e-4fc3-ae3c-2f4f40e049da"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73f5964d-39fc-44a6-b838-54dfa1e75b72"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interaction"",
            ""id"": ""ff7de690-3c9f-4a09-8bf6-2ba5ce6bf223"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""a86b9a51-bc83-4f20-baec-b3583c0c6bb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""146d3fe4-be6c-4753-aaed-2a66f3d79399"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf78bb12-6b0b-450b-9f15-4185a3b7b0ad"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerUI"",
            ""id"": ""e0063b8c-2a20-4154-9383-d95ff199a9e0"",
            ""actions"": [
                {
                    ""name"": ""OpenPlayerProfile"",
                    ""type"": ""Button"",
                    ""id"": ""21eccc98-2039-41ce-ac62-650f96d08cc0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""560ae698-ea19-4d3a-a1fc-d635e7247de2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSkillTree"",
                    ""type"": ""Button"",
                    ""id"": ""40c52bb3-a302-4597-a6a0-cef66fde358c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSettings"",
                    ""type"": ""Button"",
                    ""id"": ""53b40f48-51ad-43fd-8b23-6207e8f598b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""701535c8-53cc-42f6-92d3-2f775fccc3d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4c19d9fd-c165-447d-a2c2-014be0f156bd"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d79a7d3-d6e6-4bdc-811d-b6ea4f792171"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27dc0ae2-340b-4745-871b-7bf1889811ef"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenPlayerProfile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4056923-a126-4013-a1f4-48973b52b2aa"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenSkillTree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c7896f-174e-4f99-b03c-0dd3845f4577"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24f46d74-b727-4ed8-a47b-07cf72ac7074"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e265f945-3589-4384-b84b-965d54fdf20e"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenSettings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GeneralUI"",
            ""id"": ""f5154615-6449-4e92-9328-3465dfe91aae"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a2120a0b-85b9-46ec-98e8-c4d4b6842df8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""4d8cf725-c2bf-4e99-9729-160be70e2fe4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""cc4af099-4c7d-44c9-a9ce-c8a04c22ac77"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c2ea3c62-1478-4a13-841f-dd3f9165413f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""171b3d51-d4b6-4f3d-84b5-75800afc0279"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""821feb97-27bd-4043-bd3d-0f6d6302f5b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""defb5697-6ca4-4cc9-ae6e-935a173e3bb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e10573ce-f995-42ec-958b-d27baf4052bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fb94dd9e-97ff-430f-aee9-2f51584e708d"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6aaab749-f5b3-41e0-ac0b-f0cb5eb9a954"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""2ee1d718-6980-4be3-821c-52302db6f0d1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""11267c8e-4e0d-443a-9259-08a33a7c71fa"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e9994c70-2c33-43ba-ae2c-9adff62b6767"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4b95c264-b7b0-404f-9390-939773b0ca5f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""47d8d36b-8d50-4e14-8283-b2d7726a145e"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a705465b-e027-4bef-93b5-b30910411fd7"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""940735de-a5ec-481b-8fbd-5faf9ed0f522"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""643903af-f4eb-41f5-a546-8c417c4a8678"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f45edf72-00b9-4e65-b28c-69b0b54a04e9"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""21037c34-59e8-4fdc-9587-550f4171385b"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""efce9dff-663f-4e43-b961-d2c801f3bb33"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2f97cb12-2416-4351-95ab-6f366d4daaf1"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a866bb09-5765-4a61-8194-ee2fbcf0a042"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52cca9cd-26a5-457f-a56b-8deaa827acad"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a29dfd2b-e1a6-4671-8dcd-f06e30b4eb7e"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""0dc3552c-d920-4ec8-957b-14786159d639"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8823eeea-47fd-4a3d-a63e-7be5531e9da1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""171fdb25-405e-4e3e-999c-5bd9b00f2269"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5273b420-47f2-4764-babe-02ea9b7cfa20"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ef77dacc-6ec8-428a-950f-23726863805a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d7db66e9-d9a0-4b84-9f21-f4d71366fbfb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""af242e0b-51b0-4bf0-a4b1-b0abf76ae418"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ab72ccb9-3fec-46f9-a00f-46beb11dbf0b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""24b3490d-1110-4115-80b2-f8d26f27e42d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""deadb278-8e37-4878-9019-23be2130761f"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af0405e1-a9d5-4732-9b07-3f7001533aa5"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4ab42d2-c39d-42ec-b6d1-4819e8a7b94b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9405fd92-a285-4132-95bb-eb09cea7924d"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43074ff6-9a00-4baa-a83c-0ad34b7f3226"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""489372fd-916d-44a5-aceb-2680cfc05b15"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c18e5f2-a694-4b27-9037-156eb140d34f"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7e36030-1a23-4b0b-a905-34e562a5eadb"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d21cfb5a-4d1e-4457-9469-f6fb3ab79f1b"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fe8c583-abe5-46b5-9e9a-46ba9a37ffaa"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""616e517c-7a99-4f68-a0ac-8cb57f6c8dc1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31864016-2fb7-468b-b8ea-76d6a2028bbd"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d122831-2892-4302-ab05-ae59f4938634"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6409287-5cf9-4469-a88a-c3162d516efa"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ead6f488-72ba-485b-bc7c-d91ab42e9367"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35ba8cd0-037e-49bd-9a3b-9ee194160078"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TabControl"",
            ""id"": ""c044714b-6845-407f-a07a-1d5eb85e98bb"",
            ""actions"": [
                {
                    ""name"": ""TabLeft"",
                    ""type"": ""Button"",
                    ""id"": ""b4d0a60a-149c-4c1e-82b2-f8713de8603f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TabRight"",
                    ""type"": ""Button"",
                    ""id"": ""1237c94b-43f5-483c-8383-9674927019f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b670d245-6417-4e70-bdfb-ba17f17bfdaa"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7548409-5be7-4b44-a20b-61f50fda3306"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1877c782-597d-44c8-a739-d6b4957ab7a2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b3a0b0e-e0a2-4f09-bd7f-0db9a62c3688"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Look3rdPerson = m_Movement.FindAction("Look3rdPerson", throwIfNotFound: true);
        m_Movement_Look1stPerson = m_Movement.FindAction("Look1stPerson", throwIfNotFound: true);
        m_Movement_Move = m_Movement.FindAction("Move", throwIfNotFound: true);
        m_Movement_Sprint = m_Movement.FindAction("Sprint", throwIfNotFound: true);
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_Interact = m_Interaction.FindAction("Interact", throwIfNotFound: true);
        // PlayerUI
        m_PlayerUI = asset.FindActionMap("PlayerUI", throwIfNotFound: true);
        m_PlayerUI_OpenPlayerProfile = m_PlayerUI.FindAction("OpenPlayerProfile", throwIfNotFound: true);
        m_PlayerUI_OpenInventory = m_PlayerUI.FindAction("OpenInventory", throwIfNotFound: true);
        m_PlayerUI_OpenSkillTree = m_PlayerUI.FindAction("OpenSkillTree", throwIfNotFound: true);
        m_PlayerUI_OpenSettings = m_PlayerUI.FindAction("OpenSettings", throwIfNotFound: true);
        m_PlayerUI_OpenPauseMenu = m_PlayerUI.FindAction("OpenPauseMenu", throwIfNotFound: true);
        // GeneralUI
        m_GeneralUI = asset.FindActionMap("GeneralUI", throwIfNotFound: true);
        m_GeneralUI_Navigate = m_GeneralUI.FindAction("Navigate", throwIfNotFound: true);
        m_GeneralUI_Submit = m_GeneralUI.FindAction("Submit", throwIfNotFound: true);
        m_GeneralUI_Cancel = m_GeneralUI.FindAction("Cancel", throwIfNotFound: true);
        m_GeneralUI_Point = m_GeneralUI.FindAction("Point", throwIfNotFound: true);
        m_GeneralUI_Click = m_GeneralUI.FindAction("Click", throwIfNotFound: true);
        m_GeneralUI_ScrollWheel = m_GeneralUI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_GeneralUI_MiddleClick = m_GeneralUI.FindAction("MiddleClick", throwIfNotFound: true);
        m_GeneralUI_RightClick = m_GeneralUI.FindAction("RightClick", throwIfNotFound: true);
        m_GeneralUI_TrackedDevicePosition = m_GeneralUI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_GeneralUI_TrackedDeviceOrientation = m_GeneralUI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // TabControl
        m_TabControl = asset.FindActionMap("TabControl", throwIfNotFound: true);
        m_TabControl_TabLeft = m_TabControl.FindAction("TabLeft", throwIfNotFound: true);
        m_TabControl_TabRight = m_TabControl.FindAction("TabRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_Look3rdPerson;
    private readonly InputAction m_Movement_Look1stPerson;
    private readonly InputAction m_Movement_Move;
    private readonly InputAction m_Movement_Sprint;
    public struct MovementActions
    {
        private @PlayerInputActions m_Wrapper;
        public MovementActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look3rdPerson => m_Wrapper.m_Movement_Look3rdPerson;
        public InputAction @Look1stPerson => m_Wrapper.m_Movement_Look1stPerson;
        public InputAction @Move => m_Wrapper.m_Movement_Move;
        public InputAction @Sprint => m_Wrapper.m_Movement_Sprint;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @Look3rdPerson.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook3rdPerson;
                @Look3rdPerson.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook3rdPerson;
                @Look3rdPerson.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook3rdPerson;
                @Look1stPerson.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook1stPerson;
                @Look1stPerson.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook1stPerson;
                @Look1stPerson.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnLook1stPerson;
                @Move.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMove;
                @Sprint.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look3rdPerson.started += instance.OnLook3rdPerson;
                @Look3rdPerson.performed += instance.OnLook3rdPerson;
                @Look3rdPerson.canceled += instance.OnLook3rdPerson;
                @Look1stPerson.started += instance.OnLook1stPerson;
                @Look1stPerson.performed += instance.OnLook1stPerson;
                @Look1stPerson.canceled += instance.OnLook1stPerson;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Interaction
    private readonly InputActionMap m_Interaction;
    private IInteractionActions m_InteractionActionsCallbackInterface;
    private readonly InputAction m_Interaction_Interact;
    public struct InteractionActions
    {
        private @PlayerInputActions m_Wrapper;
        public InteractionActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Interaction_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void SetCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterface != null)
            {
                @Interact.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnInteract;
            }
            m_Wrapper.m_InteractionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);

    // PlayerUI
    private readonly InputActionMap m_PlayerUI;
    private IPlayerUIActions m_PlayerUIActionsCallbackInterface;
    private readonly InputAction m_PlayerUI_OpenPlayerProfile;
    private readonly InputAction m_PlayerUI_OpenInventory;
    private readonly InputAction m_PlayerUI_OpenSkillTree;
    private readonly InputAction m_PlayerUI_OpenSettings;
    private readonly InputAction m_PlayerUI_OpenPauseMenu;
    public struct PlayerUIActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerUIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenPlayerProfile => m_Wrapper.m_PlayerUI_OpenPlayerProfile;
        public InputAction @OpenInventory => m_Wrapper.m_PlayerUI_OpenInventory;
        public InputAction @OpenSkillTree => m_Wrapper.m_PlayerUI_OpenSkillTree;
        public InputAction @OpenSettings => m_Wrapper.m_PlayerUI_OpenSettings;
        public InputAction @OpenPauseMenu => m_Wrapper.m_PlayerUI_OpenPauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_PlayerUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerUIActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerUIActions instance)
        {
            if (m_Wrapper.m_PlayerUIActionsCallbackInterface != null)
            {
                @OpenPlayerProfile.started -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPlayerProfile;
                @OpenPlayerProfile.performed -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPlayerProfile;
                @OpenPlayerProfile.canceled -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPlayerProfile;
                @OpenInventory.started -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenInventory;
                @OpenSkillTree.started -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSkillTree;
                @OpenSkillTree.performed -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSkillTree;
                @OpenSkillTree.canceled -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSkillTree;
                @OpenSettings.started -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSettings;
                @OpenSettings.performed -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSettings;
                @OpenSettings.canceled -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenSettings;
                @OpenPauseMenu.started -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.performed -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.canceled -= m_Wrapper.m_PlayerUIActionsCallbackInterface.OnOpenPauseMenu;
            }
            m_Wrapper.m_PlayerUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenPlayerProfile.started += instance.OnOpenPlayerProfile;
                @OpenPlayerProfile.performed += instance.OnOpenPlayerProfile;
                @OpenPlayerProfile.canceled += instance.OnOpenPlayerProfile;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @OpenSkillTree.started += instance.OnOpenSkillTree;
                @OpenSkillTree.performed += instance.OnOpenSkillTree;
                @OpenSkillTree.canceled += instance.OnOpenSkillTree;
                @OpenSettings.started += instance.OnOpenSettings;
                @OpenSettings.performed += instance.OnOpenSettings;
                @OpenSettings.canceled += instance.OnOpenSettings;
                @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
            }
        }
    }
    public PlayerUIActions @PlayerUI => new PlayerUIActions(this);

    // GeneralUI
    private readonly InputActionMap m_GeneralUI;
    private IGeneralUIActions m_GeneralUIActionsCallbackInterface;
    private readonly InputAction m_GeneralUI_Navigate;
    private readonly InputAction m_GeneralUI_Submit;
    private readonly InputAction m_GeneralUI_Cancel;
    private readonly InputAction m_GeneralUI_Point;
    private readonly InputAction m_GeneralUI_Click;
    private readonly InputAction m_GeneralUI_ScrollWheel;
    private readonly InputAction m_GeneralUI_MiddleClick;
    private readonly InputAction m_GeneralUI_RightClick;
    private readonly InputAction m_GeneralUI_TrackedDevicePosition;
    private readonly InputAction m_GeneralUI_TrackedDeviceOrientation;
    public struct GeneralUIActions
    {
        private @PlayerInputActions m_Wrapper;
        public GeneralUIActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_GeneralUI_Navigate;
        public InputAction @Submit => m_Wrapper.m_GeneralUI_Submit;
        public InputAction @Cancel => m_Wrapper.m_GeneralUI_Cancel;
        public InputAction @Point => m_Wrapper.m_GeneralUI_Point;
        public InputAction @Click => m_Wrapper.m_GeneralUI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_GeneralUI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_GeneralUI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_GeneralUI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_GeneralUI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_GeneralUI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_GeneralUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralUIActions set) { return set.Get(); }
        public void SetCallbacks(IGeneralUIActions instance)
        {
            if (m_Wrapper.m_GeneralUIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_GeneralUIActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_GeneralUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public GeneralUIActions @GeneralUI => new GeneralUIActions(this);

    // TabControl
    private readonly InputActionMap m_TabControl;
    private ITabControlActions m_TabControlActionsCallbackInterface;
    private readonly InputAction m_TabControl_TabLeft;
    private readonly InputAction m_TabControl_TabRight;
    public struct TabControlActions
    {
        private @PlayerInputActions m_Wrapper;
        public TabControlActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TabLeft => m_Wrapper.m_TabControl_TabLeft;
        public InputAction @TabRight => m_Wrapper.m_TabControl_TabRight;
        public InputActionMap Get() { return m_Wrapper.m_TabControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TabControlActions set) { return set.Get(); }
        public void SetCallbacks(ITabControlActions instance)
        {
            if (m_Wrapper.m_TabControlActionsCallbackInterface != null)
            {
                @TabLeft.started -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabLeft;
                @TabLeft.performed -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabLeft;
                @TabLeft.canceled -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabLeft;
                @TabRight.started -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabRight;
                @TabRight.performed -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabRight;
                @TabRight.canceled -= m_Wrapper.m_TabControlActionsCallbackInterface.OnTabRight;
            }
            m_Wrapper.m_TabControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TabLeft.started += instance.OnTabLeft;
                @TabLeft.performed += instance.OnTabLeft;
                @TabLeft.canceled += instance.OnTabLeft;
                @TabRight.started += instance.OnTabRight;
                @TabRight.performed += instance.OnTabRight;
                @TabRight.canceled += instance.OnTabRight;
            }
        }
    }
    public TabControlActions @TabControl => new TabControlActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IMovementActions
    {
        void OnLook3rdPerson(InputAction.CallbackContext context);
        void OnLook1stPerson(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
    }
    public interface IInteractionActions
    {
        void OnInteract(InputAction.CallbackContext context);
    }
    public interface IPlayerUIActions
    {
        void OnOpenPlayerProfile(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnOpenSkillTree(InputAction.CallbackContext context);
        void OnOpenSettings(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
    }
    public interface IGeneralUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface ITabControlActions
    {
        void OnTabLeft(InputAction.CallbackContext context);
        void OnTabRight(InputAction.CallbackContext context);
    }
}
